# Spring Boot Default Config

#used by banner.txt. At that time, @PropertySource hasn't been loaded yet
#spring boot modified the maven-resource filtering delimiter to @ 

#---------------------------------
# chaserver-tcp overall default config
#---------------------------------

# 建议在 Idea 的 VM options 中设置
#spring.profiles.active=dev

# Disabling the Web Server
spring.main.web-application-type=none

# 需要p6spy带参数打印，请开启下面两条配置
spring.datasource.url=jdbc:p6spy:mysql://rm-bp10150bmgok8681b.mysql.rds.aliyuncs.com/pananlake?autoReconnect=true&failOverReadOnly=false&zeroDateTimeBehavior=convertToNull&characterEncoding=UTF-8&mysqlEncoding=utf8&useUnicode=true&useSSL=false&serverTimezone=Asia/Shanghai
spring.datasource.driver-class-name: com.p6spy.engine.spy.P6SpyDriver
#spring.datasource.url=jdbc:mysql://rm-bp10150bmgok8681b.mysql.rds.aliyuncs.com/pananlake?autoReconnect=true&failOverReadOnly=false&zeroDateTimeBehavior=convertToNull&characterEncoding=UTF-8&mysqlEncoding=utf8&useUnicode=true&useSSL=false&serverTimezone=Asia/Shanghai
spring.datasource.username=pananlake
spring.datasource.password=Pananlake123

#spring.hibernate.config=/hibernate.cfg.xml
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.database-platform=org.hibernate.dialect.MySQL57Dialect
spring.jpa.open-in-view=false

# Spring Boot will let you set any available hibernate property using "spring.jpa.properties.*"
spring.jpa.properties.hibernate.format_sql=false
# 启动"查询缓存"如果想缓存使用 findall()、list()、Iterator()、createCriteria()、createQuery()等方法获得的数据结果集,必须配置此项
spring.jpa.properties.hibernate.use_query_cache=false
# Spring 整合hibernate管理事务后，由Spring的TransactionManager管理事务后, currentSession是绑定到SpringSessionContext的，而不是thread。下面应该是默认行为，不需要配置
#spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
# Hibernate将收集有助于性能调节的统计数据，该属性在配置文件中的默认值是关闭的，因为它会消耗一些资源，但是它很适合在我们开发过程中调试程序时使用
spring.jpa.properties.hibernate.generate_statistics=false
# Hibernate二级缓存配置，SpringBoot 中不需要设置 @EnableCaching。这里直接使用SpringCache，因为Hibernate的二级缓存也仅仅对 getById、load 有效，无法缓存 getAll 等。
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
# 强制Hibernate以更人性化的格式将数据存入二级缓存
spring.jpa.properties.hibernate.cache.use_structured_entries=true
spring.jpa.properties.hibernate.cache.provider_configuration_file_resource_path=classpath:ehcache.xml
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory

#Druid 连接池
#由于我们引入了 druid-spring-boot-starter.jar，因此druid已实现autoconfig，如果要配置多数据源，那么不能autoconfig，需要手动配置，具体参见 druid-spring-boot-starter 的 github 网站.
#filters用于配置多个英文逗号分隔。通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat  日志用的filter:log4j  防御SQL注入的filter:wall.
spring.datasource.druid.initial-size=1
spring.datasource.druid.max-active=1000
spring.datasource.druid.min-idle=10
spring.datasource.druid.max-wait=60000
spring.datasource.druid.pool-prepared-statements=true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于 timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.validation-query=select 1
spring.datasource.druid.filters=stat,config

spring.cache.type=ehcache
spring.cache.ehcache.config=classpath:ehcache.xml

chaserver-tcp.server.port=8889